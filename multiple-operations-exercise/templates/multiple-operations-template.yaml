# the pipeline template uses parameters to receive
# values inside the pipeline. These values can be referred
# in the pipeline template as ${{parameters.VARIABLE_NAME}}
parameters:
# the action to be performed using the 2 numbers
- name: action
  type: string
  default: none
  values:
  - Add
  - Substract
  - Multiply
  - Divide
- name: firstNumber
  type: number
  # we can add a default value to a parameter variable using the 'default' label 
- name: secondNumber
  type: number

# pipeline execution happens in steps and each step can
# be described like below.
steps:
- bash: expr $(firstNumber) + $(secondNumber)
  displayName: Compute add operation
  condition: eq('${{ parameters.action }}', 'Add')

- bash: expr $(firstNumber) - $(secondNumber)
  displayName: Compute subtract operation
  condition: eq('${{ parameters.action }}', 'Subtract')

- bash: expr $(firstNumber) * $(secondNumber)
  displayName: Compute multiply operation
  condition: eq('${{ parameters.action }}', 'Multiply')

- bash: expr $(firstNumber) / $(secondNumber)
  displayName: Compute divide operation
  condition: eq('${{ parameters.action }}', 'Divide')